{"version":3,"sources":["components/StadiumWiseTeamPerformance/index.js","components/CustomPopup/index.js","components/MatchPlayedPerStadium/index.js","components/TossWinMatchWin/index.js","components/TeamWin/index.js","components/TeamMatchWiseScores/index.js","components/BestTeamPerformance/index.js","components/BatsmanPerformance/index.js","components/TopTenBatsman/index.js","components/BowlerPerformance/index.js","components/TopTenBowler/index.js","pages/Dashboard/index.js","helperFunctions/index.js","App.js","serviceWorker.js","themes/index.js","index.js"],"names":["StadiumWiseTeamPerformance","props","useState","stadiumMatches","setStadiumMatches","useEffect","_","isEmpty","data","teamWinLoss","i","length","opponent","Opponent_Team_Id","team","Team_Name_Id","Match_Winner_Id","valTeam","get","ValOpponent","teamList","Object","keys","winArray","lossArray","forEach","row","push","wins","losses","series","name","options","chart","type","stacked","plotOptions","bar","horizontal","stroke","width","colors","title","text","xaxis","categories","labels","formatter","val","yaxis","tooltip","y","fill","opacity","legend","position","horizontalAlign","offsetX","responsive","breakpoint","Grid","container","justify","height","useStyles","makeStyles","theme","flex1","flex","CustomDialog","classes","Dialog","fullWidth","maxWidth","open","onClose","handleClose","alignItems","item","className","DialogTitle","id","titleText","Divider","DialogContent","DialogContentText","children","DialogActions","Button","onClick","color","autoFocus","breakpoints","down","display","MatchPlayedPerStadium","key","stadium","setStadium","stadiumName","setStadiumName","openPopup","setOpenPopup","stadiumWiseMatches","array","reduce","objectsByKeyValue","obj","value","concat","stadiumNames","pie","donut","show","events","dataPointSelection","event","chartContext","config","undefined","dataPointIndex","xl","lg","md","sm","xs","Typography","variant","CustomPopup","TossWinMatchWin","tossData","winner","Toss_Winner_Id","teamId","Toss_Decision","field","bat","batArray","fieldArray","heigth","TeamWin","seasonMatches","setSeasonMatches","winsArray","TeamMatchWiseScores","matches","teamScorePerMatch","match","zoom","enabled","dataLabels","curve","align","grid","BestTeamPerformance","selectedTeam","setSelectedTeam","selectedTeamScores","setSelectedTeamScores","teamsList","teamMatchRuns","averageTeamScores","teamsAllMatchScore","scoreByMatch","matchId","matchData","runs","extras","a","b","toFixed","click","vertical","BatsmanPerformance","strikeRate","fours","sixes","balls","columnWidth","endingShape","TopTenBatsman","batsmanNames","batsmanData","selectedPlayer","setSelectedPlayer","selectedPlayerMatchdata","setSelectedPlayerMatchData","batsmanAverageRunAndStrikeRate","batsman","battingDataByPlayer","runScoredByPlayer","strikeRateByPlayer","battingDataByPlayerAndMatch","sortBy","o","parseInt","topTenId","topTenRuns","topTenStrikeRate","playerId","toolbar","tools","zoomin","zoomout","pan","reset","download","gradient","opacityFrom","opacityTo","BowlerPerformance","economies","overs","wickets","TopTenBowler","bowlerNames","bowlerData","BowlerAverageEconomyAndWicket","bowler","bowlingDataByPlayer","bowlingEconomy","bowlingDataByPlayerAndMatch","sort","topTenEconomy","topTenWicket","dropShadow","top","left","blur","borderColor","markers","size","min","max","floating","offsetY","padding","spacing","margin","border","mdToXl","smToXs","up","xsplus","xsDown","fontSize","fontWeight","textColor","background","backgroundColor","paddingBottom","xsJustify","justifyContent","paperBackground","elevation","borderRadius","boxShadow","yearData","Dashboard","matchCount","teamwiseBatting","batsmanScoreByMatch","bowlerWicketsAndDeliveriesByMatch","season","setSeason","yearToSeason","seasonKey","entries","matchDataByYear","Season_Id","map","Match_Id","allMatches","ballData","runScored","isNaN","extraRun","extraType","wicketTaken","teamRun","Team_Batting_Id","strikerPerformance","Striker_Id","bowlerPerformance","Bowler_Id","matchRun","strikerPerformanceByMatch","bowlerPerformanceByMatch","DataCalculater","Paper","classnames","backgroundImage","ToggleButtonGroup","exclusive","onChange","e","target","textContent","aria-label","index","ToggleButton","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","lightTheme","createMuiTheme","root","button","palette","white","main","highlightedBlue","primary","light","dark","secondary","almostBlack","subText","typography","fontFamily","join","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","themes","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0406ec3e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\n\r\nexport default function StadiumWiseTeamPerformance(props){\r\n\r\n    const [stadiumMatches, setStadiumMatches] = useState([])\r\n    useEffect(() => {\r\n        if(!_.isEmpty(props.data)){\r\n            setStadiumMatches(props.data)\r\n        }\r\n    }, [props.data])\r\n    let teamWinLoss = {}\r\n    for(let i=0; i<stadiumMatches.length; i++){\r\n        let opponent = stadiumMatches[i].Opponent_Team_Id\r\n        let team = stadiumMatches[i].Team_Name_Id\r\n        let winner = stadiumMatches[i].Match_Winner_Id\r\n        if(team === winner){\r\n            let valTeam = _.get(teamWinLoss, team, '-')\r\n            let ValOpponent = _.get(teamWinLoss, opponent, '-')\r\n            if(valTeam !== '-'){\r\n                teamWinLoss[team] = {...teamWinLoss[team], 'wins': _.get(teamWinLoss[team], 'wins', 0) + 1}\r\n            } else {\r\n                teamWinLoss[team] = {'wins': 1, 'losses': 0}\r\n            }\r\n            if(ValOpponent !== '-'){\r\n                teamWinLoss[opponent] = {...teamWinLoss[opponent], 'losses': _.get(teamWinLoss[opponent], 'losses', 0) + 1}\r\n            } else {\r\n                teamWinLoss[opponent] = {'wins': 0, 'losses': 1}\r\n            }\r\n        } else {\r\n            let valTeam = _.get(teamWinLoss, team, '-')\r\n            let ValOpponent = _.get(teamWinLoss, opponent, '-')\r\n            if(valTeam !== '-'){\r\n                teamWinLoss[team] = {...teamWinLoss[team], 'losses': _.get(teamWinLoss[team], 'losses', 0) + 1}\r\n            } else {\r\n                teamWinLoss[team] = {'wins': 0, 'losses': 1}\r\n            }\r\n            if(ValOpponent !== '-'){\r\n                teamWinLoss[opponent] = {...teamWinLoss[opponent], 'wins': _.get(teamWinLoss[opponent], 'wins', 0) + 1}\r\n            } else {\r\n                teamWinLoss[opponent] = {'wins': 1, 'losses': 0}\r\n            }\r\n        }\r\n    }\r\n    // console.log('team wins', teamWinLoss)\r\n    let teamList = Object.keys(teamWinLoss)\r\n    let winArray = []\r\n    let lossArray = []\r\n    teamList.forEach(row => {\r\n        winArray.push(teamWinLoss[row].wins)\r\n        lossArray.push(teamWinLoss[row].losses)\r\n    })\r\n    // console.log('team wins', winArray, lossArray)\r\n\r\n    let series = [{ name: 'Wins', data: winArray}, \r\n                 {name: 'Losses', data: lossArray}]\r\n    let options = {\r\n        chart: {\r\n          type: 'bar',\r\n        //   height: 350,\r\n          stacked: true,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n          },\r\n        },\r\n        stroke: {\r\n          width: 1,\r\n          colors: ['#fff']\r\n        },\r\n        title: {\r\n          text: 'Win-Loss Graph Of Teams'\r\n        },\r\n        xaxis: {\r\n          categories: teamList,\r\n          labels: {\r\n            formatter: function (val) {\r\n              return val\r\n            }\r\n          },\r\n          title: {\r\n            text: 'Match Count'\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Teams'\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val\r\n            }\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          offsetX: 40\r\n        },\r\n        responsive: [{\r\n          breakpoint: 960,\r\n          options: {\r\n            chart: {\r\n              width: 500,\r\n            }\r\n          },\r\n        },{\r\n          breakpoint: 600,\r\n          options: {\r\n            chart: {\r\n              width: 300,\r\n            }\r\n          },\r\n        }]\r\n      }\r\n    \r\n    \r\n    return (\r\n        <>\r\n          <Grid container justify='center'>\r\n              <ReactApexChart options={options} series={series} type=\"bar\" height={350} width={600}/>\r\n          </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Grid, makeStyles, Divider } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    flex1: {\r\n        flex: 1,\r\n    },\r\n}))\r\n\r\nfunction CustomDialog(props){\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullWidth={props.fullWidth}\r\n                maxWidth={props.maxWidth}\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n            >\r\n                <Grid container alignItems='center'>\r\n                    <Grid item className={classes.flex1}>\r\n                        <DialogTitle id=\"title\">{props.titleText}</DialogTitle>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider />\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    {props.children}\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <Divider />\r\n                <DialogActions>\r\n                    <Button onClick={props.handleClose} color=\"primary\" autoFocus>\r\n                        {'Close'}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomDialog","import React, { useState } from 'react'\r\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport StadiumWiseTeamPerformance from '../StadiumWiseTeamPerformance'\r\nimport CustomPopup from '../CustomPopup'\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    chart: {\r\n        '& div': {\r\n            '& svg': {\r\n                '& foreignObject': {\r\n                    '& div': {\r\n                        width: '170px',\r\n                        [theme.breakpoints.down('xs')]: {\r\n                            display: 'none',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst groupBy = key => array =>\r\n  array.reduce((objectsByKeyValue, obj) => {\r\n    const value = obj[key];\r\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n    return objectsByKeyValue;\r\n  }, {});\r\n\r\nexport default function MatchPlayedPerStadium(props){\r\n    const classes = useStyles()\r\n    const [stadium, setStadium] = useState('')\r\n    const [stadiumName, setStadiumName] = useState('')\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n    const stadiumMatches = groupBy('Venue_Name')\r\n    let stadiumWiseMatches = stadiumMatches(props.data)\r\n    let stadiumNames = Object.keys(stadiumWiseMatches)\r\n    \r\n    let options = {}\r\n    let series = []\r\n    if(stadiumWiseMatches && stadiumNames) {\r\n\r\n        for(let i=0; i<stadiumNames.length; i++){\r\n            series.push(stadiumWiseMatches[stadiumNames[i]].length)\r\n        }\r\n\r\n        options = {\r\n            labels: stadiumNames,\r\n            title: {\r\n                text: 'Stadium-Wise Match Count'\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    donut: {\r\n                        labels: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            chart:{\r\n                events:{\r\n                    dataPointSelection: function(event, chartContext, config) {\r\n                        \r\n                        if(config.dataPointIndex !== undefined){\r\n                            setStadium(stadiumWiseMatches[stadiumNames[config.dataPointIndex]])\r\n                            setStadiumName(stadiumNames[config.dataPointIndex])\r\n                            setOpenPopup(true)\r\n                        }\r\n                        // console.log(config.dataPointIndex)\r\n                        // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n                    }\r\n                }\r\n            },\r\n            responsive: [{\r\n              breakpoint: 1280,\r\n              options: {\r\n                chart: {\r\n                  width: 480,\r\n                }\r\n              },\r\n            },{\r\n              breakpoint: 960,\r\n              options: {\r\n                chart: {\r\n                  width: 550,\r\n                }\r\n              },\r\n            },{\r\n              breakpoint: 600,\r\n              options: {\r\n                chart: {\r\n                  width: 350,\r\n                }\r\n              },\r\n            }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <Chart className={classes.chart} options={options} series={series} type='donut' width='600' height='300'/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <Typography variant='caption'>Click Chart Segments To View More</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            { stadiumName && stadium?\r\n                <CustomPopup titleText={stadiumName} maxWidth={'sm'} open={openPopup} fullWidth={true} handleClose={() => {setOpenPopup(false); setStadium(''); setStadiumName('')}}>\r\n                    <StadiumWiseTeamPerformance data={stadium}/>\r\n                </CustomPopup>\r\n                :null\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\n\r\n\r\nexport default function TossWinMatchWin(props){\r\n\r\n    let tossData = {}\r\n    for(let i=0; i<props.data.length; i++){\r\n        let winner = props.data[i].Match_Winner_Id\r\n        if(props.data[i].Toss_Winner_Id === winner){\r\n            let teamId = _.get(tossData, winner, '-')\r\n            if(props.data[i].Toss_Decision === 'field'){\r\n                if(teamId !== '-'){\r\n                    tossData[winner] = {...tossData[winner], field: tossData[winner].field + 1}\r\n                } else {\r\n                    tossData[winner] = {bat: 0, field: 1}\r\n                }\r\n            } else {\r\n                if(teamId !== '-'){\r\n                    tossData[winner] = {...tossData[winner], bat: tossData[winner].bat + 1}\r\n                } else {\r\n                    tossData[winner] = {bat: 1, field: 0}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let teamList = Object.keys(tossData)\r\n    let batArray = []\r\n    let fieldArray = []\r\n    teamList.forEach(row => {\r\n        batArray.push(tossData[row].bat)\r\n        fieldArray.push(tossData[row].field)\r\n    })\r\n\r\n    let series = [{ name: 'Bat', data: batArray}, \r\n                 {name: 'Field', data: fieldArray}]\r\n    let options = {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n          },\r\n        },\r\n        stroke: {\r\n          width: 1,\r\n          colors: ['#fff']\r\n        },\r\n        title: {\r\n          text: 'Won Toss And Match'\r\n        },\r\n        xaxis: {\r\n          categories: teamList,\r\n          title:{\r\n            text: 'Match Count'\r\n          },\r\n          labels: {\r\n            formatter: function (val) {\r\n              return val\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Teams'\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val\r\n            }\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          offsetX: 40\r\n        },\r\n        responsive: [{\r\n          breakpoint: 1280,\r\n          options: {\r\n            chart: {\r\n              width: 420,\r\n              heigth: 350,\r\n            }\r\n          },\r\n        },{\r\n          breakpoint: 960,\r\n          options: {\r\n            chart: {\r\n              width: 550,\r\n              heigth: 550,\r\n            }\r\n          },\r\n        },{\r\n          breakpoint: 600,\r\n          options: {\r\n            chart: {\r\n              width: 350,\r\n              heigth:350,\r\n            }\r\n          },\r\n        }]\r\n      }\r\n\r\n    return (\r\n        <>\r\n          <Grid container justify='center'>\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={350} width={600} />\r\n          </Grid>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport Chart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\n\r\nconst groupBy = key => array =>\r\n  array.reduce((objectsByKeyValue, obj) => {\r\n    const value = obj[key];\r\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n    return objectsByKeyValue;\r\n  }, {});\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n\r\n}))\r\n\r\nexport default function TeamWin(props){\r\n    const classes = useStyles()\r\n\r\n    const [seasonMatches, setSeasonMatches] = useState([])\r\n    useEffect(() => {\r\n        if(!_.isEmpty(props.data)){\r\n            setSeasonMatches(props.data)\r\n        }\r\n    }, [props.data])\r\n\r\n    let winFunction = groupBy('Match_Winner_Id')\r\n    let winsArray = winFunction(seasonMatches)\r\n    let teamList = Object.keys(winsArray)\r\n\r\n    let options = {}\r\n    let series = []\r\n    if(!_.isEmpty(winsArray) && !_.isEmpty(teamList)) {\r\n\r\n        for(let i=0; i<teamList.length; i++){\r\n            series.push(winsArray[teamList[i]].length)\r\n        }\r\n\r\n        options = {\r\n            labels: teamList,\r\n            title: {\r\n                text: 'Team-Wise Win Chart'\r\n              },\r\n              responsive: [{\r\n                breakpoint: 1280,\r\n                options: {\r\n                  chart: {\r\n                    width: 480,\r\n                  }\r\n                },\r\n              },{\r\n                breakpoint: 960,\r\n                options: {\r\n                  chart: {\r\n                    width: 550,\r\n                  }\r\n                },\r\n              },{\r\n                breakpoint: 600,\r\n                options: {\r\n                  chart: {\r\n                    width: 350,\r\n                  }\r\n                },\r\n              }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <Chart className={classes.chart} options={options} series={series} type='pie' width='600' height='350'/>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\n\r\nexport default function TeamMatchWiseScores(props){\r\n\r\n    let matches = Object.keys(props.data)\r\n    let teamScorePerMatch = []\r\n    matches.forEach(match => {\r\n        teamScorePerMatch.push(props.data[match]['runs'] + props.data[match]['extras'])\r\n    })\r\n\r\n    let options = {\r\n        chart: {\r\n          height: 350,\r\n          type: 'line',\r\n          zoom: {\r\n            enabled: false\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'straight'\r\n        },\r\n        title: {\r\n          text: 'Team Score Per Match ',\r\n          align: 'left'\r\n        },\r\n        grid: {\r\n          row: {\r\n            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n            opacity: 0.5\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n              text: 'Runs'\r\n          },\r\n        },\r\n        xaxis: {\r\n          title: {\r\n            text: 'Match Count'\r\n          },\r\n        },\r\n        responsive: [{\r\n          breakpoint: 960,\r\n          options: {\r\n            chart: {\r\n              width: 500,\r\n            }\r\n          },\r\n        },{\r\n          breakpoint: 600,\r\n          options: {\r\n            chart: {\r\n              width: 300,\r\n            }\r\n          },\r\n        }]\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <ReactApexChart options={options} series={[{data: teamScorePerMatch}]} type=\"line\" height={350} />\r\n            </Grid>\r\n            \r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\nimport CustomPopup from '../../components/CustomPopup'\r\nimport TeamMatchWiseScores from '../TeamMatchWiseScores'\r\n\r\nexport default function BestTeamPerformance(props){\r\n    \r\n    const [selectedTeam, setSelectedTeam] = useState('')\r\n    const [selectedTeamScores, setSelectedTeamScores] = useState('')\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    // console.log(props.teamMatchRuns, props.matchId)\r\n    let teamsList = Object.keys(props.teamMatchRuns)\r\n    let averageTeamScores = []\r\n    teamsList.forEach(team => {\r\n      let teamsAllMatchScore = _.get(props.teamMatchRuns, team, '-')\r\n      let scoreByMatch = []\r\n      props.matchId.forEach( match => {\r\n        let matchData = _.get(teamsAllMatchScore, match, '-')\r\n        if(matchData !== '-'){\r\n          scoreByMatch.push(matchData.runs + matchData.extras)\r\n        }\r\n      })\r\n      averageTeamScores.push((scoreByMatch.reduce((a, b) => a + b, 0)/scoreByMatch.length).toFixed(2))\r\n    })\r\n\r\n    let options =  {\r\n                    chart: {\r\n                      type: 'bar',\r\n                      height: 350,\r\n                      events:{\r\n                        click: function(event, chartContext, config) {\r\n                          setOpenPopup(true)\r\n                          setSelectedTeam(config.dataPointIndex)\r\n                          setSelectedTeamScores(_.get(props.teamMatchRuns,teamsList[config.dataPointIndex], ''))\r\n                          // console.log(config.dataPointIndex)\r\n                          // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n                        }\r\n                    }\r\n                    },\r\n                    plotOptions: {\r\n                      bar: {\r\n                        // horizontal: true,\r\n                        vertical: true\r\n                      }\r\n                    },\r\n                    title: {\r\n                      text: 'Average Run Of Teams'\r\n                    },\r\n                    dataLabels: {\r\n                      enabled: false\r\n                    },\r\n                    xaxis: {\r\n                      categories: teamsList,\r\n                      title: {\r\n                        text: 'Teams'\r\n                      },\r\n                    },\r\n                    yaxis: {\r\n                      title: {\r\n                        text: 'Runs'\r\n                      },\r\n                    },\r\n                    responsive: [{\r\n                      breakpoint: 1280,\r\n                      options: {\r\n                        chart: {\r\n                          width: 420,\r\n                          heigth: 480,\r\n                        }\r\n                      },\r\n                    },{\r\n                      breakpoint: 960,\r\n                      options: {\r\n                        chart: {\r\n                          width: 550,\r\n                          heigth: 550,\r\n                        }\r\n                      },\r\n                    },{\r\n                      breakpoint: 600,\r\n                      options: {\r\n                        chart: {\r\n                          width: 350,\r\n                          heigth: 350,\r\n                        }\r\n                      },\r\n                    }]\r\n                  }\r\n\r\n    return (\r\n        <>\r\n          <Grid container justify='center'>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                  <Grid container justify='center'>\r\n                    <ReactApexChart options={options} series={[{data: averageTeamScores}]} type=\"bar\" height={350} width={600}/>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <Typography variant='caption'>Click Chart Segments To View More</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n          </Grid>\r\n          \r\n\r\n\r\n          { selectedTeam !=='' && selectedTeamScores !== ''?\r\n              <CustomPopup titleText={teamsList[selectedTeam]} maxWidth={'sm'} open={openPopup} fullWidth={true} handleClose={() => {setOpenPopup(false); setSelectedTeam(''); setSelectedTeamScores('')}}>\r\n                  <TeamMatchWiseScores data={selectedTeamScores} />\r\n              </CustomPopup>\r\n              :null\r\n          }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\nexport default function BatsmanPerformance(props){\r\n    let matchId = Object.keys(props.data)\r\n\r\n    let runs = []\r\n    let strikeRate = []\r\n    let fours = []\r\n    let sixes = []\r\n    matchId.forEach( match => {\r\n        let matchData = _.get(props.data, match, '-')\r\n        runs.push(matchData.runs)\r\n        strikeRate.push(((matchData.runs/matchData.balls)*100).toFixed(2))\r\n        fours.push(matchData.fours)\r\n        sixes.push(matchData.sixes)\r\n    })\r\n\r\n    let series = [{\r\n        name: 'Strike Rate',\r\n        data: strikeRate\r\n      }, {\r\n        name: 'Runs',\r\n        data: runs\r\n      }, {\r\n        name: 'Fours',\r\n        data: fours\r\n      }, {\r\n        name: 'Sixes',\r\n        data: sixes\r\n      }]\r\n\r\n    let options = {\r\n        chart: {\r\n          type: 'bar',\r\n          height: 350\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded'\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 2,\r\n          colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n          categories: matchId,\r\n          title: {\r\n            text: 'Count'\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Match'\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        },\r\n        responsive: [{\r\n            breakpoint: 960,\r\n            options: {\r\n              chart: {\r\n                width: 500,\r\n              }\r\n            },\r\n          },{\r\n            breakpoint: 600,\r\n            options: {\r\n              chart: {\r\n                width: 300,\r\n              }\r\n            },\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\nimport CustomPopup from '../CustomPopup'\r\nimport BatsmanPerformance from '../BatsmanPerformance'\r\n\r\n\r\nexport default function TopTenBatsman(props){\r\n    // console.log(props.batsmanData, props.matchId)\r\n    let batsmanNames = Object.keys(props.batsmanData)\r\n\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [selectedPlayer, setSelectedPlayer] = useState('')\r\n    const [selectedPlayerMatchdata, setSelectedPlayerMatchData] = useState('')\r\n    \r\n    let batsmanAverageRunAndStrikeRate = []\r\n    batsmanNames.forEach(batsman => {\r\n        let battingDataByPlayer = _.get(props.batsmanData, batsman, '-')\r\n        let runScoredByPlayer = []\r\n        let strikeRateByPlayer = []\r\n        props.matchId.forEach(match => {\r\n            let battingDataByPlayerAndMatch = _.get(battingDataByPlayer, match, '-')\r\n            if(battingDataByPlayerAndMatch !== '-'){\r\n                runScoredByPlayer.push(_.get(battingDataByPlayerAndMatch, 'runs', '-'))\r\n                strikeRateByPlayer.push((_.get(battingDataByPlayerAndMatch, 'runs', '-')/(_.get(battingDataByPlayerAndMatch, 'balls', '-'))*100))\r\n            }\r\n        })\r\n        batsmanAverageRunAndStrikeRate.push({'playerId': batsman, 'runs': (runScoredByPlayer.reduce((a, b) => a + b, 0)/runScoredByPlayer.length).toFixed(2),\r\n                                            'strikeRate': (strikeRateByPlayer.reduce((a, b) => a + b, 0)/strikeRateByPlayer.length).toFixed(2)})\r\n    })\r\n    \r\n    batsmanAverageRunAndStrikeRate = _.sortBy(batsmanAverageRunAndStrikeRate, [function(o) { return parseInt(o.runs); }])\r\n\r\n    let topTenId = []\r\n    let topTenRuns = []\r\n    let topTenStrikeRate = []\r\n    for(let i=batsmanAverageRunAndStrikeRate.length - 1; i > batsmanAverageRunAndStrikeRate.length - 11; i--){\r\n        topTenId.push(batsmanAverageRunAndStrikeRate[i].playerId)\r\n        topTenRuns.push(batsmanAverageRunAndStrikeRate[i].runs)\r\n        topTenStrikeRate.push(batsmanAverageRunAndStrikeRate[i].strikeRate)\r\n    }\r\n\r\n    let series = [\r\n        {\r\n          name: 'Runs',\r\n          data: topTenRuns\r\n        },\r\n        {\r\n          name: 'Strike Rate',\r\n          data: topTenStrikeRate\r\n        },\r\n    ]\r\n\r\n    let options = {\r\n        chart: {\r\n          type: 'area',\r\n          height: 300,\r\n          stacked: true,\r\n          events: {\r\n            click: function(event, chartContext, config) {\r\n                setOpenPopup(true)\r\n                setSelectedPlayer(topTenId[config.dataPointIndex])\r\n                setSelectedPlayerMatchData(_.get(props.batsmanData, topTenId[config.dataPointIndex], '-'))\r\n                // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n            }\r\n          },\r\n          toolbar: {\r\n            tools:{\r\n            zoomin: false,\r\n            zoomout: false,\r\n            zoom: false,\r\n            pan: false,\r\n            reset: false,\r\n            download: false,\r\n            },\r\n          }\r\n        },\r\n        title: {\r\n            text: 'Top 10 Batsman By Average Run'\r\n        },\r\n        colors: ['#008FFB', '#00E396'],\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth'\r\n        },\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            opacityFrom: 0.6,\r\n            opacityTo: 0.8,\r\n          }\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'left'\r\n        },\r\n        xaxis: {\r\n            categories: topTenId,\r\n            title: {\r\n              text: 'Teams'\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Average Runs'\r\n            },\r\n        },\r\n        responsive: [{\r\n            breakpoint: 1280,\r\n            options: {\r\n              chart: {\r\n                width: 420,\r\n                heigth: 480,\r\n              }\r\n            },\r\n          },{\r\n            breakpoint: 960,\r\n            options: {\r\n              chart: {\r\n                width: 550,\r\n                heigth: 550,\r\n              }\r\n            },\r\n          },{\r\n            breakpoint: 600,\r\n            options: {\r\n              chart: {\r\n                width: 350,\r\n                heigth: 350,\r\n              }\r\n            },\r\n          }]\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <ReactApexChart options={options} series={series} type=\"area\" height={350} width={600} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <Typography variant='caption'>Click Chart Segments To View More</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            { selectedPlayer !=='' && selectedPlayerMatchdata !==''?\r\n              <CustomPopup titleText={selectedPlayer} maxWidth={'sm'} open={openPopup} fullWidth={true} handleClose={() => {setOpenPopup(false); setSelectedPlayer(''); setSelectedPlayerMatchData('')}}>\r\n                  <BatsmanPerformance data={selectedPlayerMatchdata} />\r\n              </CustomPopup>\r\n              :null\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\nexport default function BowlerPerformance(props){\r\n    let matchId = Object.keys(props.data)\r\n\r\n    let economies = []\r\n    let overs = []\r\n    let wickets = []\r\n    matchId.forEach( match => {\r\n        let matchData = _.get(props.data, match, '-')\r\n        economies.push(matchData.runs/matchData.balls)\r\n        overs.push(matchData.balls/6)\r\n        wickets.push(matchData.wickets)\r\n    })\r\n    \r\n    let series = [{\r\n        name: 'Economy',\r\n        data: economies\r\n      }, {\r\n        name: 'Overs',\r\n        data: overs\r\n      }, {\r\n        name: 'Wickets',\r\n        data: wickets\r\n      }]\r\n\r\n    let options = {\r\n        chart: {\r\n          type: 'bar',\r\n          height: 350\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded'\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 2,\r\n          colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n          categories: matchId,\r\n          title: {\r\n            text: 'Count'\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Match'\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        },\r\n        responsive: [{\r\n            breakpoint: 960,\r\n            options: {\r\n              chart: {\r\n                width: 500,\r\n              }\r\n            },\r\n          },{\r\n            breakpoint: 600,\r\n            options: {\r\n              chart: {\r\n                width: 300,\r\n              }\r\n            },\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport _ from 'lodash'\r\n\r\nimport CustomPopup from '../CustomPopup'\r\nimport BowlerPerformance from '../BowlerPerformance'\r\n\r\n\r\nexport default function TopTenBowler(props){\r\n    // console.log(props.bowlerData, props.matchId)\r\n    let bowlerNames = Object.keys(props.bowlerData)\r\n\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [selectedPlayer, setSelectedPlayer] = useState('')\r\n    const [selectedPlayerMatchdata, setSelectedPlayerMatchData] = useState('')\r\n\r\n    let BowlerAverageEconomyAndWicket = []\r\n    bowlerNames.forEach(bowler => {\r\n        let bowlingDataByPlayer = _.get(props.bowlerData, bowler, '-')\r\n        let bowlingEconomy = []\r\n        let wickets = []\r\n        props.matchId.forEach(match => {\r\n            let bowlingDataByPlayerAndMatch = _.get(bowlingDataByPlayer, match, '-')\r\n            if(bowlingDataByPlayerAndMatch !== '-'){\r\n                bowlingEconomy.push(_.get(bowlingDataByPlayerAndMatch, 'runs', '-')/(_.get(bowlingDataByPlayerAndMatch, 'balls', '-')/6))\r\n                wickets.push(_.get(bowlingDataByPlayerAndMatch, 'wickets', '-'))\r\n            }\r\n        })\r\n        BowlerAverageEconomyAndWicket.push({'playerId': bowler, 'runs': (bowlingEconomy.reduce((a, b) => a + b, 0)/bowlingEconomy.length).toFixed(2),\r\n                                            'wickets': (wickets.reduce((a, b) => a + b, 0)/wickets.length).toFixed(2)})\r\n    })\r\n\r\n    BowlerAverageEconomyAndWicket.sort(function (a, b) {\r\n        return a.runs - b.runs || b.wickets - a.wickets;\r\n    });\r\n\r\n    let topTenId = []\r\n    let topTenEconomy = []\r\n    let topTenWicket = []\r\n    for(let i=0; i<10; i++){\r\n        topTenId.push(BowlerAverageEconomyAndWicket[i].playerId)\r\n        topTenEconomy.push(BowlerAverageEconomyAndWicket[i].runs)\r\n        topTenWicket.push(BowlerAverageEconomyAndWicket[i].wickets)\r\n    }\r\n\r\n    let series = [\r\n        {\r\n          name: \"Average Economy\",\r\n          data: topTenEconomy\r\n        },\r\n        {\r\n          name: \"Average Wickets\",\r\n          data: topTenWicket\r\n        }\r\n    ]\r\n\r\n    let options = {\r\n        chart: {\r\n          height: 350,\r\n          type: 'line',\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: '#000',\r\n            top: 18,\r\n            left: 7,\r\n            blur: 10,\r\n            opacity: 0.2\r\n          },\r\n          toolbar: {\r\n            show: false\r\n          },\r\n          events: {\r\n            click: function(event, chartContext, config) {\r\n                setOpenPopup(true)\r\n                setSelectedPlayer(topTenId[config.dataPointIndex])\r\n                setSelectedPlayerMatchData(_.get(props.bowlerData, topTenId[config.dataPointIndex], '-'))\r\n                // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n            }\r\n          },\r\n        },\r\n        colors: ['#77B6EA', '#545454'],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          curve: 'smooth'\r\n        },\r\n        title: {\r\n          text: 'Average Economy and Wicket',\r\n          align: 'left'\r\n        },\r\n        grid: {\r\n          borderColor: '#e7e7e7',\r\n          row: {\r\n            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n            opacity: 0.5\r\n          },\r\n        },\r\n        markers: {\r\n          size: 1\r\n        },\r\n        xaxis: {\r\n          categories: topTenId,\r\n          title: {\r\n            text: 'Players'\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Count'\r\n          },\r\n          min: 0,\r\n          max: 10\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          horizontalAlign: 'right',\r\n          floating: true,\r\n          offsetY: -25,\r\n          offsetX: -5\r\n        },\r\n        responsive: [{\r\n            breakpoint: 1280,\r\n            options: {\r\n              chart: {\r\n                width: 420,\r\n                heigth: 480,\r\n              }\r\n            },\r\n          },{\r\n            breakpoint: 960,\r\n            options: {\r\n              chart: {\r\n                width: 550,\r\n                heigth: 550,\r\n              }\r\n            },\r\n          },{\r\n            breakpoint: 600,\r\n            options: {\r\n              chart: {\r\n                width: 350,\r\n                heigth: 350,\r\n              }\r\n            },\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify='center'>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <ReactApexChart options={options} series={series} type=\"line\" height={350} width={600}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container justify='center'>\r\n                        <Typography variant='caption'>Click Chart Segments To View More</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            { selectedPlayer !=='' && selectedPlayerMatchdata !==''?\r\n              <CustomPopup titleText={selectedPlayer} maxWidth={'sm'} open={openPopup} fullWidth={true} handleClose={() => {setOpenPopup(false); setSelectedPlayer(''); setSelectedPlayerMatchData('')}}>\r\n                  <BowlerPerformance data={selectedPlayerMatchdata} />\r\n              </CustomPopup>\r\n              :null\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Grid, Typography, Paper, makeStyles, Divider } from '@material-ui/core'\r\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\r\n\r\n// import Background from '../../static/background1.jpg';\r\n\r\nimport MatchPlayedPerStadium from '../../components/MatchPlayedPerStadium'\r\nimport TossWinMatchWin from '../../components/TossWinMatchWin'\r\nimport TeamWin from '../../components/TeamWin'\r\nimport BestTeamPerformance from '../../components/BestTeamPerformance'\r\nimport TopTenBatsman from '../../components/TopTenBatsman'\r\nimport TopTenBowler from '../../components/TopTenBowler'\r\n\r\nimport { DataCalculater } from '../../helperFunctions'\r\n\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    padding: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    width: {\r\n      width: '100%',\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    height: {\r\n        height: '350px'\r\n    },\r\n    border: {\r\n        border: '1px solid black'\r\n    },\r\n    mdToXl: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    smToXs: {\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      }\r\n    },\r\n    xs: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        display: 'none',\r\n      }\r\n    },\r\n    xsplus: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        display: 'none',\r\n      }\r\n    },\r\n    xsDown: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        '& button': {\r\n          padding: '2px',\r\n        },\r\n      }\r\n    },\r\n    text: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: '16px',\r\n        fontWeight: '500',\r\n      }\r\n    },\r\n    textColor: {\r\n      color: 'white',\r\n    },\r\n    background: {\r\n      backgroundColor: '#363636',\r\n    },\r\n    paddingBottom: {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    xsJustify: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        justifyContent: 'center',\r\n      }\r\n    },\r\n    paperBackground: {\r\n      backgroundColor: '#FAFAFA',\r\n    },\r\n    elevation: {\r\n      backgroundColor: 'white',\r\n      borderRadius: '4px',\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    }\r\n  })\r\n  )\r\n\r\n\r\nconst yearData = {}\r\n\r\n\r\nexport default function Dashboard(){\r\n    const classes = useStyles()\r\n    const [season, setSeason] = useState(1)\r\n    const yearToSeason = {'2008': 1, '2009': 2, '2010': 3, '2011': 4, '2012': 5, '2013': 6, '2014': 7, '2015': 8, '2016': 9, 'All': 10}\r\n    const seasonKey = Object.entries(yearToSeason)\r\n    \r\n    let matchCount, teamwiseBatting, matchId, batsmanScoreByMatch, bowlerWicketsAndDeliveriesByMatch\r\n\r\n    if(typeof yearData[season] !== 'undefined'){\r\n      matchCount = yearData[season][0]\r\n      teamwiseBatting  = yearData[season][1]\r\n      matchId = yearData[season][2]\r\n      batsmanScoreByMatch = yearData[season][3]\r\n      bowlerWicketsAndDeliveriesByMatch = yearData[season][4]\r\n    } else {\r\n      const matchDataByYear = DataCalculater(season)\r\n      yearData[season] = matchDataByYear\r\n      matchCount = matchDataByYear[0]\r\n      teamwiseBatting = matchDataByYear[1]\r\n      matchId = matchDataByYear[2]\r\n      batsmanScoreByMatch = matchDataByYear[3]\r\n      bowlerWicketsAndDeliveriesByMatch = yearData[season][4]\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Paper elevation={0} className={classnames(classes.backgroundImage, classes.paperBackground)}>\r\n          <Grid container className={classnames(classes.padding, classes.background, classes.xsJustify)}>\r\n            <Typography className={classnames(classes.textColor, classes.background)} variant={'h6'}>IPL Dashboard</Typography>\r\n          </Grid>\r\n          <Grid container alignItems='center' className={classes.mdToXl}>\r\n  \r\n            <Grid item xl={2} lg={2} md={2}>\r\n              <Grid container alignItems='center' className={classes.padding}>\r\n                <Grid item xl={12} lg={12} md={12} sm={12}>\r\n                  <Grid container justify='center'>\r\n                    <Typography variant='h6'>Total Matches</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xl={12} lg={12} md={12} sm={12}>\r\n                  <Grid container justify='center'>\r\n                    <Typography variant='h6'>{matchCount.length}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n  \r\n            <Grid item className={classes.flex}>\r\n                <Grid container justify='center'>\r\n                    <ToggleButtonGroup\r\n                    value={season}\r\n                    exclusive\r\n                    onChange={e => setSeason(yearToSeason[e.target.textContent])}\r\n                    aria-label=\"text alignment\"\r\n                    >\r\n                        {\r\n                          seasonKey.map((row, index) => \r\n                            (\r\n                              <ToggleButton key={row[0]} value={row[1]}>\r\n                                  <Typography variant='body2'>{row[0]}</Typography>\r\n                              </ToggleButton>\r\n                            )\r\n                          )\r\n                        }\r\n                    </ToggleButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n  \r\n            <Grid item xl={2} lg={2} md={2}>\r\n              <Grid container alignItems='center' className={classes.padding}>\r\n                <Grid item xl={12} lg={12} md={12} sm={12}>\r\n                  <Grid container justify='center'>\r\n                    <Typography variant='h6'>IPL Season</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xl={12} lg={12} md={12} sm={12}>\r\n                  <Grid container justify='center'>\r\n                    {\r\n                      season < 10?\r\n                      <Typography variant='h6'>{season}</Typography>\r\n                      :<Typography variant='h6'>1-9</Typography>\r\n                    }\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container alignItems='center' className={classes.smToXs}>\r\n            <Grid item sm={12} xs={12} className={classes.padding}>\r\n                <Grid container>\r\n                  <Grid item sm={6} xs={6}>\r\n                    <Grid container>\r\n                      <Typography className={classes.text} variant='h6'>Total Matches: &nbsp;</Typography>\r\n                      <Typography className={classes.text} variant='h6'>{matchCount.length}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item sm={6} xs={6}>\r\n                    <Grid container justify='flex-end'>\r\n                      <Typography className={classes.text} variant='h6'>IPL Season: &nbsp;</Typography>\r\n                      {\r\n                      season < 10?\r\n                        <Typography className={classes.text} variant='h6'>{season}</Typography>\r\n                        :<Typography className={classes.text} variant='h6'>1-9</Typography>\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sm={12} xs={12} className={classes.paddingBottom}>\r\n              <Grid container justify='center'>\r\n                <ToggleButtonGroup\r\n                className={classes.xsDown}\r\n                value={season}\r\n                exclusive\r\n                onChange={e => setSeason(yearToSeason[e.target.textContent])}\r\n                aria-label=\"text alignment\"\r\n                >\r\n                  {\r\n                    seasonKey.map((row, index) => \r\n                      (\r\n                        <ToggleButton key={row[0]} value={row[1]}>\r\n                            <Typography variant='body2'>{row[0]}</Typography>\r\n                        </ToggleButton>\r\n                      )\r\n                    )\r\n                  }\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Divider/>\r\n          <Grid container justify='center'>\r\n            <Grid item xl={4} lg={6} md={6} sm={12} xs={12} className={classnames(classes.padding, classes.elevation)}>\r\n              <MatchPlayedPerStadium data={matchCount} />\r\n            </Grid>\r\n            <Grid item xl={4} lg={6} md={6} sm={12} xs={12} className={classnames(classes.padding, classes.elevation)}>\r\n              <TossWinMatchWin data={matchCount} />\r\n            </Grid>\r\n            <Grid item xl={4} lg={6} md={6} sm={12} xs={12} className={classnames(classes.padding, classes.elevation)}>\r\n              <TeamWin data={matchCount} />\r\n            </Grid>\r\n            <Grid item xl={4} lg={6} md={6} sm={12} xs={12} className={classnames(classes.padding, classes.elevation)}>\r\n              <BestTeamPerformance teamMatchRuns={teamwiseBatting} matchId={matchId} />\r\n            </Grid>\r\n            <Grid item xl={4} lg={6} md={6} sm={12} xs={12} className={classnames(classes.padding, classes.elevation)}>\r\n              <TopTenBatsman batsmanData={batsmanScoreByMatch} matchId={matchId}/>\r\n            </Grid>\r\n            <Grid item xl={4} lg={6} md={6} sm={12} xs={12}  className={classnames(classes.padding, classes.elevation)}>\r\n              <TopTenBowler bowlerData={bowlerWicketsAndDeliveriesByMatch} matchId={matchId} />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </>\r\n    )\r\n}","import matchData from '../static/Match.json'\r\nimport ballData from '../static/Ball_by_Ball.json'\r\n\r\nimport _ from 'lodash'\r\n\r\nconst groupBy = key => array =>\r\n  array.reduce((objectsByKeyValue, obj) => {\r\n    const value = obj[key];\r\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n    return objectsByKeyValue;\r\n}, {});\r\n\r\nexport const DataCalculater = (season) => {\r\n    let matchCount = []\r\n    if(season === 10){\r\n        matchCount = matchData\r\n    } else {\r\n        for (let i = 0; i < matchData.length; i++) {\r\n            if(matchData[i].Season_Id === season){\r\n                matchCount.push(matchData[i])\r\n            }\r\n            if(matchCount.length > 0 && matchData[i].Season_Id !== season){\r\n                break\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    let matchId = matchCount.map(row => row.Match_Id)\r\n    \r\n    const groupByMatch = groupBy('Match_Id')\r\n    let allMatches = groupByMatch(ballData)\r\n\r\n    if(season < 10){\r\n        let seasonMatches = {}\r\n        matchId.forEach(match => {\r\n            let matchData = _.get(allMatches, match, '')\r\n            if(matchData){\r\n                seasonMatches[match] = matchData\r\n            }\r\n        })\r\n        allMatches = seasonMatches\r\n    }\r\n\r\n    let teamwiseBatting = {}\r\n    let batsmanScoreByMatch = {}\r\n    let bowlerWicketsAndDeliveriesByMatch = {}\r\n\r\n    matchId.forEach( match => {\r\n      allMatches[match].forEach(row => {\r\n        let runScored = parseInt(_.get(row, 'Batsman_Scored', 0))\r\n        if(isNaN(runScored)){\r\n          runScored = 0\r\n        }\r\n        let extraRun = _.get(row, 'Extra_Runs', 0)\r\n        let extraType = _.get(row, 'Extra_Type', '-')\r\n        let wicketTaken = _.get(row, 'Dissimal_Type', '-')\r\n        let teamRun = _.get(teamwiseBatting, row.Team_Batting_Id, '-')\r\n        let strikerPerformance = _.get(batsmanScoreByMatch, row.Striker_Id, '-')\r\n        let bowlerPerformance = _.get(bowlerWicketsAndDeliveriesByMatch, row.Bowler_Id, '-')\r\n        if(teamRun !== '-'){\r\n          let matchRun = _.get(teamRun, match, '-')\r\n          if(matchRun !== '-'){\r\n            teamwiseBatting[row.Team_Batting_Id][match] = {runs: matchRun.runs + runScored + extraRun, extras: matchRun.extras + extraRun}\r\n          } else {\r\n            teamwiseBatting[row.Team_Batting_Id][match] = {runs: runScored, extras: extraRun}\r\n          }\r\n        } else {\r\n          teamwiseBatting[row.Team_Batting_Id] = {[match]: {runs: runScored, extras: extraRun}}\r\n        }\r\n\r\n        if(strikerPerformance !== '-'){\r\n          let strikerPerformanceByMatch = _.get(strikerPerformance, match, '-')\r\n          if(strikerPerformanceByMatch !== '-'){\r\n            if(runScored === 4){\r\n              batsmanScoreByMatch[row.Striker_Id][match] = {...strikerPerformanceByMatch, \r\n                                                            runs: strikerPerformanceByMatch.runs + runScored, \r\n                                                            balls: strikerPerformanceByMatch.balls + 1, \r\n                                                            fours: strikerPerformanceByMatch.fours + 1}\r\n            } else if(runScored === 6){\r\n              batsmanScoreByMatch[row.Striker_Id][match] = {...strikerPerformanceByMatch, \r\n                                                            runs: strikerPerformanceByMatch.runs + runScored, \r\n                                                            balls: strikerPerformanceByMatch.balls + 1, \r\n                                                            sixes: strikerPerformanceByMatch.sixes + 1}\r\n            } else {\r\n              batsmanScoreByMatch[row.Striker_Id][match] = {...strikerPerformanceByMatch, \r\n                                                            runs: strikerPerformanceByMatch.runs + runScored, \r\n                                                            balls: strikerPerformanceByMatch.balls + 1}\r\n            }\r\n          } else {\r\n            if(runScored === 4){\r\n              batsmanScoreByMatch[row.Striker_Id][match] = {runs: runScored, balls: 1, fours: 1, sixes: 0}\r\n            } else if(runScored === 6){\r\n              batsmanScoreByMatch[row.Striker_Id][match] = {runs: runScored, balls: 1, fours: 0, sixes: 1}\r\n            } else {\r\n              batsmanScoreByMatch[row.Striker_Id][match] = {runs: runScored, balls: 1, fours: 0, sixes: 0}\r\n            }\r\n          }\r\n        } else {\r\n          if(runScored === 4){\r\n            batsmanScoreByMatch[row.Striker_Id] = {[match]: {runs: runScored, balls: 1, fours: 1, sixes: 0}}\r\n          } else if(runScored === 6){\r\n            batsmanScoreByMatch[row.Striker_Id] = {[match]: {runs: runScored, balls: 1, fours: 0, sixes: 1}}\r\n          } else {\r\n            batsmanScoreByMatch[row.Striker_Id] = {[match]: {runs: runScored, balls: 1, fours: 0, sixes: 0}}\r\n          }\r\n        }\r\n\r\n        if(bowlerPerformance !== '-'){\r\n          let bowlerPerformanceByMatch = _.get(bowlerPerformance, match, '-')\r\n          if(bowlerPerformanceByMatch !== '-'){\r\n            if(extraType === 'noballs' || extraType === 'wides'){\r\n              if(wicketTaken !== ' '){\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {...bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match], \r\n                                                                          runs:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].runs + runScored + extraRun, \r\n                                                                          wickets:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].wickets + 1 }\r\n              } else {\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {...bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match], \r\n                                                                          runs:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].runs + runScored + extraRun}\r\n              }\r\n            } else {\r\n              if(wicketTaken !== ' '){\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {runs:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].runs + runScored + extraRun, \r\n                                                                          wickets:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].wickets + 1, \r\n                                                                          balls:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].balls + 1}\r\n              } else {\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {...bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match], \r\n                                                                          runs:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].runs + runScored + extraRun, \r\n                                                                          balls:bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match].balls + 1}\r\n              }\r\n            }\r\n          } else {\r\n            if(extraType === 'noballs' || extraType === 'wides'){\r\n              if(wicketTaken !== ' '){\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {runs:runScored + extraRun, wickets: 1, balls: 0}\r\n              } else {\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {runs:runScored + extraRun, wickets: 0, balls: 0}\r\n              }\r\n            } else {\r\n              if(wicketTaken !== ' '){\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {runs:runScored + extraRun, wickets: 1, balls: 1}\r\n              } else {\r\n                bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id][match] = {runs:runScored + extraRun, balls: 1, wickets: 0}\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          if(extraType === 'noballs' || extraType === 'wides'){\r\n            if(wicketTaken !== ' '){\r\n              bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id] = {[match]: {runs:runScored + extraRun, wickets: 1, balls: 0}}\r\n            } else {\r\n              bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id] = {[match]: {runs:runScored + extraRun, wickets: 0, balls: 0}}\r\n            }\r\n          } else {\r\n            if(wicketTaken !== ' '){\r\n              bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id] = {[match]: {runs:runScored + extraRun, wickets: 1, balls: 1}}\r\n            } else {\r\n              bowlerWicketsAndDeliveriesByMatch[row.Bowler_Id] = {[match]: {runs:runScored + extraRun, balls: 1, wickets: 0}}\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return ([matchCount, teamwiseBatting, matchId, batsmanScoreByMatch, bowlerWicketsAndDeliveriesByMatch])\r\n}","import React from 'react'\nimport Dashboard from './pages/Dashboard'\nimport './App.css';\n\n\nfunction App() {\n  \n  return (\n    <>\n      <Dashboard />\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\nconst lightTheme = createMuiTheme({\r\n  root: {\r\n    '&$selected': {\r\n      backgroundColor: 'blue',\r\n    },\r\n    button :{\r\n      '&$hover' : {\r\n        backgroundColor : '#4f5f76'\r\n      }\r\n    },\r\n  },\r\n  palette: {\r\n    white: {\r\n      main : '#fff'\r\n    },\r\n    highlightedBlue : {\r\n      main : '#5B6F8A'\r\n    },\r\n    primary: {  \r\n        light: '#4f91cd',\r\n        main: '#19388a',\r\n        dark: '#313d4b',\r\n    },\r\n    secondary: {\r\n      light: '#63ddac',\r\n      main: 'rgba(6, 42, 99, 0.87)',\r\n      dark: '#2a956a'\r\n    },\r\n    almostBlack: {\r\n      light : '#323C47',\r\n      main : '#d5d5dc',\r\n      dark : '#171725'\r\n    },\r\n    subText: {\r\n      main : '#6A6A66',\r\n    }\r\n    // success: {\r\n    //   light: '#9bcf63',\r\n    //   main: '#82c43c',\r\n    //   dark: '#5b892a'\r\n    // },\r\n    // error: {\r\n    //   light: '#fc7b7b',\r\n    //   main: '#fc5a5a',\r\n    //   dark: '#b03e3e'\r\n    // },\r\n    // warning: {\r\n    //   light: '#ffab6e',\r\n    //   main: '#ff974a',\r\n    //   dark: '#b26933'\r\n    // },\r\n    // info: {\r\n    //   light: '#73c3ff',\r\n    //   main: '#50b5ff',\r\n    //   dark: '#387eb2'\r\n    // },\r\n    \r\n    // background: {\r\n    //   paper: '#fff',\r\n    //   default: '#fafafb'\r\n    // },\r\n    // text: {\r\n    //   primary: '#171725',\r\n    //   secondary: '#92929d',\r\n    //   disabled: '#e2e2ea',\r\n    //   hint: '#e2e2ea'\r\n    // }\r\n  },\r\n  // status: {\r\n  //   danger: 'orange',\r\n  // },\r\n  typography: {\r\n    fontFamily: [\r\n      'Roboto',\r\n      \"Raleway\",\r\n      'Poppins',\r\n      \"sans-serif\",\r\n    ].join(','),\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default {\r\n    light:responsiveFontSizes(lightTheme)\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThemeProvider} from '@material-ui/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport themes from './themes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={themes.light}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}